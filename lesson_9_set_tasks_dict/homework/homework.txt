1) Даны два словаря: dictionary_1 = {'a': 300, 'b': 400} и
dictionary_2 = {'c': 500, 'd': 600}.
Объедините их в один при помощи встроенных функций языка Python.

2) Создайте словарь d = {'1': 0, ‘2’: 0, '3': 0} тремя способами.
Выведите полученный словарь на экран.
3) Задан список слов, в которых встречается символ ‘_’ подчеркивание).
Создать новый список, в котором символ подчеркивания в словах ‘_’ заменить символо ‘ ‘ (пробел).
l = [ "ab_cd_e", "abc", "a_b_c", "a__bc_d_", "__" ]

4) На вход программы подается словарь a = {1:10, 2:20, 3:30},
необходимо получить список произведения ключа на значение.

5) Выведите статистику частности букв в кортеже
long_word = ( 'т', 'т', 'а', 'и', 'и', 'а', 'и’,'и', 'и', 'т', 'т', 'а', 'и', 'и','и', 'и', 'и', 'т', 'и’)
Примечание: Статистика частности - число повторений каждой из букв.

6) Создать произвольный словарь 2. Добавить новый элемент с ключом типа str и значением
типа int 3. Добавить новый элемент с ключом типа кортеж(tuple) и значением типа список(list)
4. Получить элемент по ключу 5. Удалить элемент по ключу
6. Получить список ключей словаряльности дубликаты

7) Создать множество. Создать неизменяемое множество. Выполнить операцию объединения
созданных множеств. Выполнить операцию пересечения созданных множеств.

8) Даны списки:
a = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89];
b = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13].
Нужно вернуть список, который состоит из элементов, общих для этих двух списков.

9) Дана строка. Сохранить в ней только первые вхождения символов, удалив все остальные.
Результат вывести в виде кортежа.

10) Создайте 2 множества:
- Если они одинаковые: вывести что они равны
- Если 1 множество полностью состоит из второго: вывести сообщение множество 1
состоит из множества2

- Если 2 множество полностью состоит из 1: вывести сообщение множество 2
 	 состоит из множества 1

- Если они пересекаются: вывести элементы в которых они пересекаются
- Если не пересекаются: вывести сообщение об этом

